#! /usr/bin/env ruby

require 'optparse'

require_relative '../lib/draughts'
require_relative '../lib/draughts/ai/setup'
require_relative '../lib/draughts/ai/training_bot'

$quiet = false
parser = OptionParser.new
parser.on("-q") { $quiet = true }
parser.parse(ARGV)
ARGV.clear

def log(msg)
  return if $quiet
  puts msg
  gets
end

def print_board(game)
  puts "Board is now:"
  puts
  puts game
  puts
end

game = Draughts::Engine::Game.new
players = [
  Draughts::AI::TrainingBot.new(:black),
  Draughts::AI::TrainingBot.new(:white),
]

puts "Starting game..."

loop do
  players.each { |p| p.configuration = game.standard_notation }

  player = players.shift

  log "It's #{player.color}'s turn"

  move = player.play
  log "#{player.color} played #{move} with probability #{player.probability_of(move)}"

  result = game.play(move.origin, move.destination)
  player.learn(result.success)

  log "#{move} was #{result.success ? "" : "not"} legal. Learned."

  if result.success
    players.push(player)
  else
    players.unshift(player)
  end

  print_board(game)

  break if result.ends_game
end

puts "#{players.last.color} won!"
